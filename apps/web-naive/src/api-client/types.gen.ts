// This file is auto-generated by @hey-api/openapi-ts

export type AbpLoginResult = {
  readonly description?: null | string;
  result?: LoginResultType;
};

export type ActionApiDescriptionModel = {
  allowAnonymous?: boolean | null;
  httpMethod?: null | string;
  implementFrom?: null | string;
  name?: null | string;
  parameters?: Array<ParameterApiDescriptionModel> | null;
  parametersOnMethod?: Array<MethodParameterApiDescriptionModel> | null;
  returnValue?: ReturnValueApiDescriptionModel;
  supportedVersions?: Array<string> | null;
  uniqueName?: null | string;
  url?: null | string;
};

export type ApplicationApiDescriptionModel = {
  modules?: {
    [key: string]: ModuleApiDescriptionModel;
  } | null;
  types?: {
    [key: string]: TypeApiDescriptionModel;
  } | null;
};

export type ApplicationAuthConfigurationDto = {
  grantedPolicies?: {
    [key: string]: boolean;
  } | null;
};

export type ApplicationConfigurationDto = {
  auth?: ApplicationAuthConfigurationDto;
  clock?: ClockDto;
  currentTenant?: CurrentTenantDto;
  currentUser?: CurrentUserDto;
  extraProperties?: {
    [key: string]: unknown;
  } | null;
  features?: ApplicationFeatureConfigurationDto;
  globalFeatures?: ApplicationGlobalFeatureConfigurationDto;
  localization?: ApplicationLocalizationConfigurationDto;
  multiTenancy?: MultiTenancyInfoDto;
  objectExtensions?: ObjectExtensionsDto;
  setting?: ApplicationSettingConfigurationDto;
  timing?: TimingDto;
};

export type ApplicationFeatureConfigurationDto = {
  values?: {
    [key: string]: null | string;
  } | null;
};

export type ApplicationGlobalFeatureConfigurationDto = {
  enabledFeatures?: Array<string> | null;
};

export type ApplicationLocalizationConfigurationDto = {
  currentCulture?: CurrentCultureDto;
  defaultResourceName?: null | string;
  languageFilesMap?: {
    [key: string]: Array<NameValue>;
  } | null;
  languages?: Array<LanguageInfo> | null;
  languagesMap?: {
    [key: string]: Array<NameValue>;
  } | null;
  resources?: {
    [key: string]: ApplicationLocalizationResourceDto;
  } | null;
  values?: {
    [key: string]: {
      [key: string]: string;
    };
  } | null;
};

export type ApplicationLocalizationDto = {
  currentCulture?: CurrentCultureDto;
  resources?: {
    [key: string]: ApplicationLocalizationResourceDto;
  } | null;
};

export type ApplicationLocalizationResourceDto = {
  baseResources?: Array<string> | null;
  texts?: {
    [key: string]: string;
  } | null;
};

export type ApplicationSettingConfigurationDto = {
  values?: {
    [key: string]: null | string;
  } | null;
};

export type BookDto = {
  creationTime?: string;
  creatorId?: null | string;
  id?: string;
  lastModificationTime?: null | string;
  lastModifierId?: null | string;
  name?: null | string;
  price?: number;
  publishDate?: string;
  type?: BookType;
};

export type BookDtoPagedResultDto = {
  items?: Array<BookDto> | null;
  totalCount?: number;
};

export type BookType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;

export type ChangePasswordInput = {
  currentPassword?: null | string;
  newPassword: string;
};

export type ClockDto = {
  kind?: null | string;
};

export type ControllerApiDescriptionModel = {
  actions?: {
    [key: string]: ActionApiDescriptionModel;
  } | null;
  apiVersion?: null | string;
  controllerGroupName?: null | string;
  controllerName?: null | string;
  interfaces?: Array<ControllerInterfaceApiDescriptionModel> | null;
  isIntegrationService?: boolean;
  isRemoteService?: boolean;
  type?: null | string;
};

export type ControllerInterfaceApiDescriptionModel = {
  methods?: Array<InterfaceMethodApiDescriptionModel> | null;
  name?: null | string;
  type?: null | string;
};

export type CreateUpdateBookDto = {
  name: string;
  price: number;
  publishDate: string;
  type: BookType;
};

export type CurrentCultureDto = {
  cultureName?: null | string;
  dateTimeFormat?: DateTimeFormatDto;
  displayName?: null | string;
  englishName?: null | string;
  isRightToLeft?: boolean;
  name?: null | string;
  nativeName?: null | string;
  threeLetterIsoLanguageName?: null | string;
  twoLetterIsoLanguageName?: null | string;
};

export type CurrentTenantDto = {
  id?: null | string;
  isAvailable?: boolean;
  name?: null | string;
};

export type CurrentUserDto = {
  email?: null | string;
  emailVerified?: boolean;
  id?: null | string;
  impersonatorTenantId?: null | string;
  impersonatorTenantName?: null | string;
  impersonatorUserId?: null | string;
  impersonatorUserName?: null | string;
  isAuthenticated?: boolean;
  name?: null | string;
  phoneNumber?: null | string;
  phoneNumberVerified?: boolean;
  roles?: Array<string> | null;
  sessionId?: null | string;
  surName?: null | string;
  tenantId?: null | string;
  userName?: null | string;
};

export type DateTimeFormatDto = {
  calendarAlgorithmType?: null | string;
  dateSeparator?: null | string;
  dateTimeFormatLong?: null | string;
  fullDateTimePattern?: null | string;
  longTimePattern?: null | string;
  shortDatePattern?: null | string;
  shortTimePattern?: null | string;
};

export type EmailSettingsDto = {
  defaultFromAddress?: null | string;
  defaultFromDisplayName?: null | string;
  smtpDomain?: null | string;
  smtpEnableSsl?: boolean;
  smtpHost?: null | string;
  smtpPassword?: null | string;
  smtpPort?: number;
  smtpUseDefaultCredentials?: boolean;
  smtpUserName?: null | string;
};

export type EntityExtensionDto = {
  configuration?: {
    [key: string]: unknown;
  } | null;
  properties?: {
    [key: string]: ExtensionPropertyDto;
  } | null;
};

export type ExtensionEnumDto = {
  fields?: Array<ExtensionEnumFieldDto> | null;
  localizationResource?: null | string;
};

export type ExtensionEnumFieldDto = {
  name?: null | string;
  value?: unknown;
};

export type ExtensionPropertyApiCreateDto = {
  isAvailable?: boolean;
};

export type ExtensionPropertyApiDto = {
  onCreate?: ExtensionPropertyApiCreateDto;
  onGet?: ExtensionPropertyApiGetDto;
  onUpdate?: ExtensionPropertyApiUpdateDto;
};

export type ExtensionPropertyApiGetDto = {
  isAvailable?: boolean;
};

export type ExtensionPropertyApiUpdateDto = {
  isAvailable?: boolean;
};

export type ExtensionPropertyAttributeDto = {
  config?: {
    [key: string]: unknown;
  } | null;
  typeSimple?: null | string;
};

export type ExtensionPropertyDto = {
  api?: ExtensionPropertyApiDto;
  attributes?: Array<ExtensionPropertyAttributeDto> | null;
  configuration?: {
    [key: string]: unknown;
  } | null;
  defaultValue?: unknown;
  displayName?: LocalizableStringDto;
  policy?: ExtensionPropertyPolicyDto;
  type?: null | string;
  typeSimple?: null | string;
  ui?: ExtensionPropertyUiDto;
};

export type ExtensionPropertyFeaturePolicyDto = {
  features?: Array<string> | null;
  requiresAll?: boolean;
};

export type ExtensionPropertyGlobalFeaturePolicyDto = {
  features?: Array<string> | null;
  requiresAll?: boolean;
};

export type ExtensionPropertyPermissionPolicyDto = {
  permissionNames?: Array<string> | null;
  requiresAll?: boolean;
};

export type ExtensionPropertyPolicyDto = {
  features?: ExtensionPropertyFeaturePolicyDto;
  globalFeatures?: ExtensionPropertyGlobalFeaturePolicyDto;
  permissions?: ExtensionPropertyPermissionPolicyDto;
};

export type ExtensionPropertyUiDto = {
  lookup?: ExtensionPropertyUiLookupDto;
  onCreateForm?: ExtensionPropertyUiFormDto;
  onEditForm?: ExtensionPropertyUiFormDto;
  onTable?: ExtensionPropertyUiTableDto;
};

export type ExtensionPropertyUiFormDto = {
  isVisible?: boolean;
};

export type ExtensionPropertyUiLookupDto = {
  displayPropertyName?: null | string;
  filterParamName?: null | string;
  resultListPropertyName?: null | string;
  url?: null | string;
  valuePropertyName?: null | string;
};

export type ExtensionPropertyUiTableDto = {
  isVisible?: boolean;
};

export type FeatureDto = {
  depth?: number;
  description?: null | string;
  displayName?: null | string;
  name?: null | string;
  parentName?: null | string;
  provider?: FeatureProviderDto;
  value?: null | string;
  valueType?: IStringValueType;
};

export type FeatureGroupDto = {
  displayName?: null | string;
  features?: Array<FeatureDto> | null;
  name?: null | string;
};

export type FeatureProviderDto = {
  key?: null | string;
  name?: null | string;
};

export type FindTenantResultDto = {
  isActive?: boolean;
  name?: null | string;
  normalizedName?: null | string;
  success?: boolean;
  tenantId?: null | string;
};

export type GetFeatureListResultDto = {
  groups?: Array<FeatureGroupDto> | null;
};

export type GetPermissionListResultDto = {
  entityDisplayName?: null | string;
  groups?: Array<PermissionGroupDto> | null;
};

export type IanaTimeZone = {
  timeZoneName?: null | string;
};

export type IdentityRoleCreateDto = {
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  isDefault?: boolean;
  isPublic?: boolean;
  name: string;
};

export type IdentityRoleDto = {
  concurrencyStamp?: null | string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  id?: string;
  isDefault?: boolean;
  isPublic?: boolean;
  isStatic?: boolean;
  name?: null | string;
};

export type IdentityRoleDtoListResultDto = {
  items?: Array<IdentityRoleDto> | null;
};

export type IdentityRoleDtoPagedResultDto = {
  items?: Array<IdentityRoleDto> | null;
  totalCount?: number;
};

export type IdentityRoleUpdateDto = {
  concurrencyStamp?: null | string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  isDefault?: boolean;
  isPublic?: boolean;
  name: string;
};

export type IdentityUserCreateDto = {
  email: string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  isActive?: boolean;
  lockoutEnabled?: boolean;
  name?: null | string;
  password: string;
  phoneNumber?: null | string;
  roleNames?: Array<string> | null;
  surname?: null | string;
  userName: string;
};

export type IdentityUserDto = {
  accessFailedCount?: number;
  concurrencyStamp?: null | string;
  creationTime?: string;
  creatorId?: null | string;
  deleterId?: null | string;
  deletionTime?: null | string;
  email?: null | string;
  emailConfirmed?: boolean;
  entityVersion?: number;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  id?: string;
  isActive?: boolean;
  isDeleted?: boolean;
  lastModificationTime?: null | string;
  lastModifierId?: null | string;
  lastPasswordChangeTime?: null | string;
  lockoutEnabled?: boolean;
  lockoutEnd?: null | string;
  name?: null | string;
  phoneNumber?: null | string;
  phoneNumberConfirmed?: boolean;
  surname?: null | string;
  tenantId?: null | string;
  userName?: null | string;
};

export type IdentityUserDtoPagedResultDto = {
  items?: Array<IdentityUserDto> | null;
  totalCount?: number;
};

export type IdentityUserUpdateDto = {
  concurrencyStamp?: null | string;
  email: string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  isActive?: boolean;
  lockoutEnabled?: boolean;
  name?: null | string;
  password?: null | string;
  phoneNumber?: null | string;
  roleNames?: Array<string> | null;
  surname?: null | string;
  userName: string;
};

export type IdentityUserUpdateRolesDto = {
  roleNames: Array<string>;
};

export type InterfaceMethodApiDescriptionModel = {
  name?: null | string;
  parametersOnMethod?: Array<MethodParameterApiDescriptionModel> | null;
  returnValue?: ReturnValueApiDescriptionModel;
};

export type IStringValueType = {
  readonly name?: null | string;
  readonly properties?: {
    [key: string]: unknown;
  } | null;
  validator?: IValueValidator;
};

export type IValueValidator = {
  readonly name?: null | string;
  readonly properties?: {
    [key: string]: unknown;
  } | null;
};

export type LanguageInfo = {
  cultureName?: null | string;
  displayName?: null | string;
  readonly twoLetterISOLanguageName?: null | string;
  uiCultureName?: null | string;
};

export type LocalizableStringDto = {
  name?: null | string;
  resource?: null | string;
};

export type LoginResultType = 1 | 2 | 3 | 4 | 5;

export type MethodParameterApiDescriptionModel = {
  defaultValue?: unknown;
  isOptional?: boolean;
  name?: null | string;
  type?: null | string;
  typeAsString?: null | string;
  typeSimple?: null | string;
};

export type ModuleApiDescriptionModel = {
  controllers?: {
    [key: string]: ControllerApiDescriptionModel;
  } | null;
  remoteServiceName?: null | string;
  rootPath?: null | string;
};

export type ModuleExtensionDto = {
  configuration?: {
    [key: string]: unknown;
  } | null;
  entities?: {
    [key: string]: EntityExtensionDto;
  } | null;
};

export type MultiTenancyInfoDto = {
  isEnabled?: boolean;
};

export type NameValue = {
  name?: null | string;
  value?: null | string;
};

export type ObjectExtensionsDto = {
  enums?: {
    [key: string]: ExtensionEnumDto;
  } | null;
  modules?: {
    [key: string]: ModuleExtensionDto;
  } | null;
};

export type ParameterApiDescriptionModel = {
  bindingSourceId?: null | string;
  constraintTypes?: Array<string> | null;
  defaultValue?: unknown;
  descriptorName?: null | string;
  isOptional?: boolean;
  jsonName?: null | string;
  name?: null | string;
  nameOnMethod?: null | string;
  type?: null | string;
  typeSimple?: null | string;
};

export type PermissionGrantInfoDto = {
  allowedProviders?: Array<string> | null;
  displayName?: null | string;
  grantedProviders?: Array<ProviderInfoDto> | null;
  isGranted?: boolean;
  name?: null | string;
  parentName?: null | string;
};

export type PermissionGroupDto = {
  displayName?: null | string;
  displayNameKey?: null | string;
  displayNameResource?: null | string;
  name?: null | string;
  permissions?: Array<PermissionGrantInfoDto> | null;
};

export type ProfileDto = {
  concurrencyStamp?: null | string;
  email?: null | string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  hasPassword?: boolean;
  isExternal?: boolean;
  name?: null | string;
  phoneNumber?: null | string;
  surname?: null | string;
  userName?: null | string;
};

export type PropertyApiDescriptionModel = {
  isRequired?: boolean;
  jsonName?: null | string;
  maximum?: null | string;
  maxLength?: null | number;
  minimum?: null | string;
  minLength?: null | number;
  name?: null | string;
  regex?: null | string;
  type?: null | string;
  typeSimple?: null | string;
};

export type ProviderInfoDto = {
  providerKey?: null | string;
  providerName?: null | string;
};

export type RegisterDto = {
  appName: string;
  emailAddress: string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  password: string;
  userName: string;
};

export type RemoteServiceErrorInfo = {
  code?: null | string;
  data?: {
    [key: string]: unknown;
  } | null;
  details?: null | string;
  message?: null | string;
  validationErrors?: Array<RemoteServiceValidationErrorInfo> | null;
};

export type RemoteServiceErrorResponse = {
  error?: RemoteServiceErrorInfo;
};

export type RemoteServiceValidationErrorInfo = {
  members?: Array<string> | null;
  message?: null | string;
};

export type ResetPasswordDto = {
  password: string;
  resetToken: string;
  userId?: string;
};

export type ReturnValueApiDescriptionModel = {
  type?: null | string;
  typeSimple?: null | string;
};

export type SendPasswordResetCodeDto = {
  appName: string;
  email: string;
  returnUrl?: null | string;
  returnUrlHash?: null | string;
};

export type SendTestEmailInput = {
  body?: null | string;
  senderEmailAddress: string;
  subject: string;
  targetEmailAddress: string;
};

export type TenantCreateDto = {
  adminEmailAddress: string;
  adminPassword: string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  name: string;
};

export type TenantDto = {
  concurrencyStamp?: null | string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  id?: string;
  name?: null | string;
};

export type TenantDtoPagedResultDto = {
  items?: Array<TenantDto> | null;
  totalCount?: number;
};

export type TenantUpdateDto = {
  concurrencyStamp?: null | string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  name: string;
};

export type TimeZone = {
  iana?: IanaTimeZone;
  windows?: WindowsTimeZone;
};

export type TimingDto = {
  timeZone?: TimeZone;
};

export type TypeApiDescriptionModel = {
  baseType?: null | string;
  enumNames?: Array<string> | null;
  enumValues?: Array<unknown> | null;
  genericArguments?: Array<string> | null;
  isEnum?: boolean;
  properties?: Array<PropertyApiDescriptionModel> | null;
};

export type UpdateEmailSettingsDto = {
  defaultFromAddress: string;
  defaultFromDisplayName: string;
  smtpDomain?: null | string;
  smtpEnableSsl?: boolean;
  smtpHost?: null | string;
  smtpPassword?: null | string;
  smtpPort?: number;
  smtpUseDefaultCredentials?: boolean;
  smtpUserName?: null | string;
};

export type UpdateFeatureDto = {
  name?: null | string;
  value?: null | string;
};

export type UpdateFeaturesDto = {
  features?: Array<UpdateFeatureDto> | null;
};

export type UpdatePermissionDto = {
  isGranted?: boolean;
  name?: null | string;
};

export type UpdatePermissionsDto = {
  permissions?: Array<UpdatePermissionDto> | null;
};

export type UpdateProfileDto = {
  concurrencyStamp?: null | string;
  email?: null | string;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  name?: null | string;
  phoneNumber?: null | string;
  surname?: null | string;
  userName?: null | string;
};

export type UserData = {
  email?: null | string;
  emailConfirmed?: boolean;
  readonly extraProperties?: {
    [key: string]: unknown;
  } | null;
  id?: string;
  isActive?: boolean;
  name?: null | string;
  phoneNumber?: null | string;
  phoneNumberConfirmed?: boolean;
  surname?: null | string;
  tenantId?: null | string;
  userName?: null | string;
};

export type UserDataListResultDto = {
  items?: Array<UserData> | null;
};

export type UserLoginInfo = {
  password: string;
  rememberMe?: boolean;
  userNameOrEmailAddress: string;
};

export type VerifyPasswordResetTokenInput = {
  resetToken: string;
  userId?: string;
};

export type WindowsTimeZone = {
  timeZoneId?: null | string;
};

export type GetApiAbpApiDefinitionData = {
  query?: {
    IncludeTypes?: boolean;
  };
};

export type GetApiAbpApiDefinitionResponse = ApplicationApiDescriptionModel;

export type GetApiAbpApiDefinitionError = RemoteServiceErrorResponse;

export type GetApiAbpApplicationConfigurationData = {
  query?: {
    IncludeLocalizationResources?: boolean;
  };
};

export type GetApiAbpApplicationConfigurationResponse =
  ApplicationConfigurationDto;

export type GetApiAbpApplicationConfigurationError = RemoteServiceErrorResponse;

export type GetApiAbpApplicationLocalizationData = {
  query: {
    CultureName: string;
    OnlyDynamics?: boolean;
  };
};

export type GetApiAbpApplicationLocalizationResponse =
  ApplicationLocalizationDto;

export type GetApiAbpApplicationLocalizationError = RemoteServiceErrorResponse;

export type GetApiAbpMultiTenancyTenantsByNameByNameData = {
  path: {
    name: string;
  };
};

export type GetApiAbpMultiTenancyTenantsByNameByNameResponse =
  FindTenantResultDto;

export type GetApiAbpMultiTenancyTenantsByNameByNameError =
  RemoteServiceErrorResponse;

export type GetApiAbpMultiTenancyTenantsByIdByIdData = {
  path: {
    id: string;
  };
};

export type GetApiAbpMultiTenancyTenantsByIdByIdResponse = FindTenantResultDto;

export type GetApiAbpMultiTenancyTenantsByIdByIdError =
  RemoteServiceErrorResponse;

export type PostApiAccountRegisterData = {
  body?: RegisterDto;
};

export type PostApiAccountRegisterResponse = IdentityUserDto;

export type PostApiAccountRegisterError = RemoteServiceErrorResponse;

export type PostApiAccountSendPasswordResetCodeData = {
  body?: SendPasswordResetCodeDto;
};

export type PostApiAccountSendPasswordResetCodeResponse = unknown;

export type PostApiAccountSendPasswordResetCodeError =
  RemoteServiceErrorResponse;

export type PostApiAccountVerifyPasswordResetTokenData = {
  body?: VerifyPasswordResetTokenInput;
};

export type PostApiAccountVerifyPasswordResetTokenResponse = boolean;

export type PostApiAccountVerifyPasswordResetTokenError =
  RemoteServiceErrorResponse;

export type PostApiAccountResetPasswordData = {
  body?: ResetPasswordDto;
};

export type PostApiAccountResetPasswordResponse = unknown;

export type PostApiAccountResetPasswordError = RemoteServiceErrorResponse;

export type GetApiAppBookByIdData = {
  path: {
    id: string;
  };
};

export type GetApiAppBookByIdResponse = BookDto;

export type GetApiAppBookByIdError = RemoteServiceErrorResponse;

export type PutApiAppBookByIdData = {
  body?: CreateUpdateBookDto;
  path: {
    id: string;
  };
};

export type PutApiAppBookByIdResponse = BookDto;

export type PutApiAppBookByIdError = RemoteServiceErrorResponse;

export type DeleteApiAppBookByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiAppBookByIdResponse = unknown;

export type DeleteApiAppBookByIdError = RemoteServiceErrorResponse;

export type GetApiAppBookData = {
  query?: {
    MaxResultCount?: number;
    SkipCount?: number;
    Sorting?: string;
  };
};

export type GetApiAppBookResponse = BookDtoPagedResultDto;

export type GetApiAppBookError = RemoteServiceErrorResponse;

export type PostApiAppBookData = {
  body?: CreateUpdateBookDto;
};

export type PostApiAppBookResponse = BookDto;

export type PostApiAppBookError = RemoteServiceErrorResponse;

export type PostApiAccountDynamicClaimsRefreshResponse = unknown;

export type PostApiAccountDynamicClaimsRefreshError =
  RemoteServiceErrorResponse;

export type GetApiSettingManagementEmailingResponse = EmailSettingsDto;

export type GetApiSettingManagementEmailingError = RemoteServiceErrorResponse;

export type PostApiSettingManagementEmailingData = {
  body?: UpdateEmailSettingsDto;
};

export type PostApiSettingManagementEmailingResponse = unknown;

export type PostApiSettingManagementEmailingError = RemoteServiceErrorResponse;

export type PostApiSettingManagementEmailingSendTestEmailData = {
  body?: SendTestEmailInput;
};

export type PostApiSettingManagementEmailingSendTestEmailResponse = unknown;

export type PostApiSettingManagementEmailingSendTestEmailError =
  RemoteServiceErrorResponse;

export type GetApiFeatureManagementFeaturesData = {
  query?: {
    providerKey?: string;
    providerName?: string;
  };
};

export type GetApiFeatureManagementFeaturesResponse = GetFeatureListResultDto;

export type GetApiFeatureManagementFeaturesError = RemoteServiceErrorResponse;

export type PutApiFeatureManagementFeaturesData = {
  body?: UpdateFeaturesDto;
  query?: {
    providerKey?: string;
    providerName?: string;
  };
};

export type PutApiFeatureManagementFeaturesResponse = unknown;

export type PutApiFeatureManagementFeaturesError = RemoteServiceErrorResponse;

export type DeleteApiFeatureManagementFeaturesData = {
  query?: {
    providerKey?: string;
    providerName?: string;
  };
};

export type DeleteApiFeatureManagementFeaturesResponse = unknown;

export type DeleteApiFeatureManagementFeaturesError =
  RemoteServiceErrorResponse;

export type PostApiAccountLoginData = {
  body?: UserLoginInfo;
};

export type PostApiAccountLoginResponse = AbpLoginResult;

export type PostApiAccountLoginError = RemoteServiceErrorResponse;

export type GetApiAccountLogoutResponse = unknown;

export type GetApiAccountLogoutError = RemoteServiceErrorResponse;

export type PostApiAccountCheckPasswordData = {
  body?: UserLoginInfo;
};

export type PostApiAccountCheckPasswordResponse = AbpLoginResult;

export type PostApiAccountCheckPasswordError = RemoteServiceErrorResponse;

export type GetApiPermissionManagementPermissionsData = {
  query?: {
    providerKey?: string;
    providerName?: string;
  };
};

export type GetApiPermissionManagementPermissionsResponse =
  GetPermissionListResultDto;

export type GetApiPermissionManagementPermissionsError =
  RemoteServiceErrorResponse;

export type PutApiPermissionManagementPermissionsData = {
  body?: UpdatePermissionsDto;
  query?: {
    providerKey?: string;
    providerName?: string;
  };
};

export type PutApiPermissionManagementPermissionsResponse = unknown;

export type PutApiPermissionManagementPermissionsError =
  RemoteServiceErrorResponse;

export type GetApiAccountMyProfileResponse = ProfileDto;

export type GetApiAccountMyProfileError = RemoteServiceErrorResponse;

export type PutApiAccountMyProfileData = {
  body?: UpdateProfileDto;
};

export type PutApiAccountMyProfileResponse = ProfileDto;

export type PutApiAccountMyProfileError = RemoteServiceErrorResponse;

export type PostApiAccountMyProfileChangePasswordData = {
  body?: ChangePasswordInput;
};

export type PostApiAccountMyProfileChangePasswordResponse = unknown;

export type PostApiAccountMyProfileChangePasswordError =
  RemoteServiceErrorResponse;

export type GetApiIdentityRolesAllResponse = IdentityRoleDtoListResultDto;

export type GetApiIdentityRolesAllError = RemoteServiceErrorResponse;

export type GetApiIdentityRolesData = {
  query?: {
    ExtraProperties?: {
      [key: string]: unknown;
    };
    Filter?: string;
    MaxResultCount?: number;
    SkipCount?: number;
    Sorting?: string;
  };
};

export type GetApiIdentityRolesResponse = IdentityRoleDtoPagedResultDto;

export type GetApiIdentityRolesError = RemoteServiceErrorResponse;

export type PostApiIdentityRolesData = {
  body?: IdentityRoleCreateDto;
};

export type PostApiIdentityRolesResponse = IdentityRoleDto;

export type PostApiIdentityRolesError = RemoteServiceErrorResponse;

export type GetApiIdentityRolesByIdData = {
  path: {
    id: string;
  };
};

export type GetApiIdentityRolesByIdResponse = IdentityRoleDto;

export type GetApiIdentityRolesByIdError = RemoteServiceErrorResponse;

export type PutApiIdentityRolesByIdData = {
  body?: IdentityRoleUpdateDto;
  path: {
    id: string;
  };
};

export type PutApiIdentityRolesByIdResponse = IdentityRoleDto;

export type PutApiIdentityRolesByIdError = RemoteServiceErrorResponse;

export type DeleteApiIdentityRolesByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiIdentityRolesByIdResponse = unknown;

export type DeleteApiIdentityRolesByIdError = RemoteServiceErrorResponse;

export type GetApiMultiTenancyTenantsByIdData = {
  path: {
    id: string;
  };
};

export type GetApiMultiTenancyTenantsByIdResponse = TenantDto;

export type GetApiMultiTenancyTenantsByIdError = RemoteServiceErrorResponse;

export type PutApiMultiTenancyTenantsByIdData = {
  body?: TenantUpdateDto;
  path: {
    id: string;
  };
};

export type PutApiMultiTenancyTenantsByIdResponse = TenantDto;

export type PutApiMultiTenancyTenantsByIdError = RemoteServiceErrorResponse;

export type DeleteApiMultiTenancyTenantsByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiMultiTenancyTenantsByIdResponse = unknown;

export type DeleteApiMultiTenancyTenantsByIdError = RemoteServiceErrorResponse;

export type GetApiMultiTenancyTenantsData = {
  query?: {
    Filter?: string;
    MaxResultCount?: number;
    SkipCount?: number;
    Sorting?: string;
  };
};

export type GetApiMultiTenancyTenantsResponse = TenantDtoPagedResultDto;

export type GetApiMultiTenancyTenantsError = RemoteServiceErrorResponse;

export type PostApiMultiTenancyTenantsData = {
  body?: TenantCreateDto;
};

export type PostApiMultiTenancyTenantsResponse = TenantDto;

export type PostApiMultiTenancyTenantsError = RemoteServiceErrorResponse;

export type GetApiMultiTenancyTenantsByIdDefaultConnectionStringData = {
  path: {
    id: string;
  };
};

export type GetApiMultiTenancyTenantsByIdDefaultConnectionStringResponse =
  string;

export type GetApiMultiTenancyTenantsByIdDefaultConnectionStringError =
  RemoteServiceErrorResponse;

export type PutApiMultiTenancyTenantsByIdDefaultConnectionStringData = {
  path: {
    id: string;
  };
  query?: {
    defaultConnectionString?: string;
  };
};

export type PutApiMultiTenancyTenantsByIdDefaultConnectionStringResponse =
  unknown;

export type PutApiMultiTenancyTenantsByIdDefaultConnectionStringError =
  RemoteServiceErrorResponse;

export type DeleteApiMultiTenancyTenantsByIdDefaultConnectionStringData = {
  path: {
    id: string;
  };
};

export type DeleteApiMultiTenancyTenantsByIdDefaultConnectionStringResponse =
  unknown;

export type DeleteApiMultiTenancyTenantsByIdDefaultConnectionStringError =
  RemoteServiceErrorResponse;

export type GetApiSettingManagementTimezoneResponse = string;

export type GetApiSettingManagementTimezoneError = RemoteServiceErrorResponse;

export type PostApiSettingManagementTimezoneData = {
  query?: {
    timezone?: string;
  };
};

export type PostApiSettingManagementTimezoneResponse = unknown;

export type PostApiSettingManagementTimezoneError = RemoteServiceErrorResponse;

export type GetApiSettingManagementTimezoneTimezonesResponse = Array<NameValue>;

export type GetApiSettingManagementTimezoneTimezonesError =
  RemoteServiceErrorResponse;

export type GetApiIdentityUsersByIdData = {
  path: {
    id: string;
  };
};

export type GetApiIdentityUsersByIdResponse = IdentityUserDto;

export type GetApiIdentityUsersByIdError = RemoteServiceErrorResponse;

export type PutApiIdentityUsersByIdData = {
  body?: IdentityUserUpdateDto;
  path: {
    id: string;
  };
};

export type PutApiIdentityUsersByIdResponse = IdentityUserDto;

export type PutApiIdentityUsersByIdError = RemoteServiceErrorResponse;

export type DeleteApiIdentityUsersByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiIdentityUsersByIdResponse = unknown;

export type DeleteApiIdentityUsersByIdError = RemoteServiceErrorResponse;

export type GetApiIdentityUsersData = {
  query?: {
    ExtraProperties?: {
      [key: string]: unknown;
    };
    Filter?: string;
    MaxResultCount?: number;
    SkipCount?: number;
    Sorting?: string;
  };
};

export type GetApiIdentityUsersResponse = IdentityUserDtoPagedResultDto;

export type GetApiIdentityUsersError = RemoteServiceErrorResponse;

export type PostApiIdentityUsersData = {
  body?: IdentityUserCreateDto;
};

export type PostApiIdentityUsersResponse = IdentityUserDto;

export type PostApiIdentityUsersError = RemoteServiceErrorResponse;

export type GetApiIdentityUsersByIdRolesData = {
  path: {
    id: string;
  };
};

export type GetApiIdentityUsersByIdRolesResponse = IdentityRoleDtoListResultDto;

export type GetApiIdentityUsersByIdRolesError = RemoteServiceErrorResponse;

export type PutApiIdentityUsersByIdRolesData = {
  body?: IdentityUserUpdateRolesDto;
  path: {
    id: string;
  };
};

export type PutApiIdentityUsersByIdRolesResponse = unknown;

export type PutApiIdentityUsersByIdRolesError = RemoteServiceErrorResponse;

export type GetApiIdentityUsersAssignableRolesResponse =
  IdentityRoleDtoListResultDto;

export type GetApiIdentityUsersAssignableRolesError =
  RemoteServiceErrorResponse;

export type GetApiIdentityUsersByUsernameByUserNameData = {
  path: {
    userName: string;
  };
};

export type GetApiIdentityUsersByUsernameByUserNameResponse = IdentityUserDto;

export type GetApiIdentityUsersByUsernameByUserNameError =
  RemoteServiceErrorResponse;

export type GetApiIdentityUsersByEmailByEmailData = {
  path: {
    email: string;
  };
};

export type GetApiIdentityUsersByEmailByEmailResponse = IdentityUserDto;

export type GetApiIdentityUsersByEmailByEmailError = RemoteServiceErrorResponse;

export type GetApiIdentityUsersLookupByIdData = {
  path: {
    id: string;
  };
};

export type GetApiIdentityUsersLookupByIdResponse = UserData;

export type GetApiIdentityUsersLookupByIdError = RemoteServiceErrorResponse;

export type GetApiIdentityUsersLookupByUsernameByUserNameData = {
  path: {
    userName: string;
  };
};

export type GetApiIdentityUsersLookupByUsernameByUserNameResponse = UserData;

export type GetApiIdentityUsersLookupByUsernameByUserNameError =
  RemoteServiceErrorResponse;

export type GetApiIdentityUsersLookupSearchData = {
  query?: {
    ExtraProperties?: {
      [key: string]: unknown;
    };
    Filter?: string;
    MaxResultCount?: number;
    SkipCount?: number;
    Sorting?: string;
  };
};

export type GetApiIdentityUsersLookupSearchResponse = UserDataListResultDto;

export type GetApiIdentityUsersLookupSearchError = RemoteServiceErrorResponse;

export type GetApiIdentityUsersLookupCountData = {
  query?: {
    Filter?: string;
  };
};

export type GetApiIdentityUsersLookupCountResponse = number;

export type GetApiIdentityUsersLookupCountError = RemoteServiceErrorResponse;
